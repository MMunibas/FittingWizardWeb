/*
 * Fitting service API
 * Provides operations for fitting algorithms
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Calculation;
import io.swagger.client.model.CalculationId;
import io.swagger.client.model.CalculationStatusList;
import java.io.File;
import io.swagger.client.model.FileList;
import io.swagger.client.model.JobIdList;
import io.swagger.client.model.Run;
import io.swagger.client.model.RunId;
import io.swagger.client.model.Status;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CalculationApi
 */
@Ignore
public class CalculationApiTest {

    private final CalculationApi api = new CalculationApi();

    
    /**
     * Deletes the specified calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCalculationResourceTest() throws ApiException {
        String calculationId = null;
        api.deleteCalculationResource(calculationId);

        // TODO: test validations
    }
    
    /**
     * Delete input file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInputFileDownloadResourceTest() throws ApiException {
        String calculationId = null;
        String relativePath = null;
        api.deleteInputFileDownloadResource(calculationId, relativePath);

        // TODO: test validations
    }
    
    /**
     * Delete output file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOutputFileDownloadResourceTest() throws ApiException {
        String calculationId = null;
        String relativePath = null;
        api.deleteOutputFileDownloadResource(calculationId, relativePath);

        // TODO: test validations
    }
    
    /**
     * Returns a list of available calculations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCalculationListTest() throws ApiException {
        CalculationStatusList response = api.getCalculationList();

        // TODO: test validations
    }
    
    /**
     * Returns the status of the specified calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCalculationResourceTest() throws ApiException {
        String calculationId = null;
        Status response = api.getCalculationResource(calculationId);

        // TODO: test validations
    }
    
    /**
     * List all running jobs for a calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInputFileDownloadResourceTest() throws ApiException {
        String calculationId = null;
        String relativePath = null;
        api.getInputFileDownloadResource(calculationId, relativePath);

        // TODO: test validations
    }
    
    /**
     * Upload input file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInputFileListResourceTest() throws ApiException {
        String calculationId = null;
        FileList response = api.getInputFileListResource(calculationId);

        // TODO: test validations
    }
    
    /**
     * List all running jobs for a calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobResourceTest() throws ApiException {
        String calculationId = null;
        JobIdList response = api.getJobResource(calculationId);

        // TODO: test validations
    }
    
    /**
     * Download output file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOutputFileDownloadResourceTest() throws ApiException {
        String calculationId = null;
        String relativePath = null;
        api.getOutputFileDownloadResource(calculationId, relativePath);

        // TODO: test validations
    }
    
    /**
     * List all running jobs for a calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOutputFileListResourceTest() throws ApiException {
        String calculationId = null;
        FileList response = api.getOutputFileListResource(calculationId);

        // TODO: test validations
    }
    
    /**
     * Creates new calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCalculationListTest() throws ApiException {
        Calculation payload = null;
        CalculationId response = api.postCalculationList(payload);

        // TODO: test validations
    }
    
    /**
     * Update parameters
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCalculationResourceTest() throws ApiException {
        String calculationId = null;
        Calculation payload = null;
        Status response = api.postCalculationResource(calculationId, payload);

        // TODO: test validations
    }
    
    /**
     * Abort the specified calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCancelCalculationActionTest() throws ApiException {
        String calculationId = null;
        api.postCancelCalculationAction(calculationId);

        // TODO: test validations
    }
    
    /**
     * Upload input file
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postInputFileListResourceTest() throws ApiException {
        String calculationId = null;
        File file = null;
        api.postInputFileListResource(calculationId, file);

        // TODO: test validations
    }
    
    /**
     * Start a run of this calculation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postRunCalculationActionTest() throws ApiException {
        String calculationId = null;
        Run payload = null;
        RunId response = api.postRunCalculationAction(calculationId, payload);

        // TODO: test validations
    }
    
}
